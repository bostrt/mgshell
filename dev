#!/bin/bash
if [ -z $VIRTUAL_ENV ]; then
    echo 'Please activate your Python virtualenv and source this file again.'
    return 1
fi

# Ensure script dir
mkdir -p $VIRTUAL_ENV/mglibexec

python setup.py clean
python setup.py develop --script-dir $VIRTUAL_ENV/mglibexec

eval "$(_NS_COMPLETE=source_bash $VIRTUAL_ENV/mglibexec/ns)"
eval "$(_POD_COMPLETE=source_bash $VIRTUAL_ENV/mglibexec/pod)"
eval "$(_LOG_COMPLETE=source_bash $VIRTUAL_ENV/mglibexec/log)"
eval "$(_MGSHELL_COMPLETE=source_bash $VIRTUAL_ENV/mglibexec/mgshell)"

unset -f ns
unset -f pod
unset -f root
unset -f log

export MGLIBEXEC=$VIRTUAL_ENV/mglibexec

for f in wrappers/*;
do
    . $f
done

#function _update_ps1() {
#    ret=$(~/code/mgshell/a.out)
#    if [ "$ret" ]; then
#      echo CHANGE
#      #PS1=$ret
#    else
#      echo REVERT
##      #PS1=$MG_ORIGINAL_PS1
#    fi
#}

#MG_ORIGINAL_PS1=$PS1

#if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
#    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
#fi
